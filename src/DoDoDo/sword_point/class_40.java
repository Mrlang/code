package DoDoDo.sword_point;

/**
 * Created by Mr_liang on 2017/8/13 using IDEA.
 * 题目:数组中大部分数字都是出现了两次,只有两个数组出现了一次,求这两个数字
 * http://blog.csdn.net/derrantcm/article/details/46771717
 * TODO:数组中有两个只出现一次的数字需要找出来,要求时间复杂度是O(n)，空间复杂度是O(1)
 * 如果没有时间复杂度要求，可以两次遍历n2来暴力解决
 * 如果只有时间而没有空间复杂度要求，可以用映射数组来记录每一个值出现的次数，然后遍历这个映射数组O(2n)时间+O(n)空间得到第一个次数为1的
 * TODO: 都有要求的话，将数组所有值放在一起异或得到的结果就是两个数A、B的异或结果,
 *       然后看这个结果倒数第几位开始是1，加入是第3位,则说明两个数字中，一个数字倒数第3位是1，一个倒数第3位是0.
 *       遍历数组,根据每个数字第3位是否为1分成两个子数组。
 *       对每个子数组里每个数字进行异或，每组里剩下来的数字即是。
 */

public class class_40 {

}
